{"version":3,"sources":["rc-galleria.js"],"names":["angular","$","module","provider","path","theme","options","showInfo","_toggleInfo","this","setPath","input","setTheme","setOptions","$get","galleriaFactory","directive","$timeout","$log","rcGalleria","restrict","scope","sources","images","currentIndex","keepSource","src","transition","initialTransition","imageCrop","showImagenav","autoplay","pauseOnInteraction","responsive","initialShowDock","thumbnails","toggleInfo","showCounter","clickNext","template","link","$scope","$element","attrs","theme_path","isDefined","isUndefined","length","currentSource","console","log","Galleria","loadTheme","obj","find","GalleriaApiReference","parseInt","configure","extend","show","clicknext","run","debug","get","firstImageLoaded","ready","e","on","click","index","$apply","$emit","iframe","video","imageTarget","mouseup","$on","destroy","jQuery"],"mappings":"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","file":"rc-galleria.js","sourcesContent":["(function (angular, $) {\n\n    'use strict';\n\n    // Create module\n    var module = angular.module('rcGalleria', []);\n\n    module.provider('rcGalleria', [ function () {\n\n        var path = '';\n        var theme = '';\n        // default config\n        var options = {\n            showInfo: true,\n            _toggleInfo: false\n        };\n\n        this.setPath = function(input){\n            path = input;\n        };\n\n        this.setTheme = function(input){\n            theme = input;\n        };\n\n        this.setOptions = function(input){\n            options = input;\n        };\n        this.$get = function galleriaFactory(){\n            return {\n                path: path,\n                theme: theme,\n                options:options\n            };\n        };\n    }]);\n\n    module.directive('rcGalleria', [ '$timeout', '$log', 'rcGalleria', function ($timeout, $log, rcGalleria) {\n        return {\n            restrict: 'E',\n            scope: {\n                sources: '=',\n                images: '=',\n                currentIndex: '=',\n                keepSource: '@',\n                src: '@',\n                theme: '@',\n                transition: '@',\n                initialTransition: '@',\n                imageCrop: '@',\n                showImagenav: '@',\n                autoplay: '@',\n                pauseOnInteraction: '@',\n                responsive: '@',\n                initialShowDock: '@',\n                thumbnails: '@',\n                showInfo: '@',\n                toggleInfo: '@',\n                showCounter: '@',\n                clickNext: '@'\n            },\n            template: '<div class=\"galleria\" style=\"height: 100%; width: 100%\" data-ng-class=\"{\\'galleria-current-iframe\\': currentSource.iframe, \\'galleria-current-video\\': currentSource.video, \\'galleria-current-image\\': currentSource.image }\">' +\n            '<div data-ng-repeat=\"source in sources\">' +\n            '<a data-ng-if=\"source.iframe\" data-ng-href=\"{{source.iframe}}\"><img data-ng-if=\"source.thumb\" class=\"iframe\" data-ng-src=\"{{source.thumb}}\" data-title=\"{{source.title}}\"' +\n            ' data-description=\"{{source.description}}\" alt=\"{{source.alt}}\" />' +\n            '<span data-ng-if=\"!source.thumb\" class=\"iframe\">{{source.title}}</span>' +\n            '</a>' +\n            '<a data-ng-if=\"source.video\" data-ng-href=\"{{source.video}}\"><img data-ng-if=\"source.thumb\" class=\"video\" data-ng-src=\"{{source.thumb}}\" data-title=\"{{source.title}}\"' +\n            ' data-description=\"{{source.description}}\" alt=\"{{source.alt}}\" />' +\n            '<span data-ng-if=\"!source.thumb\" class=\"video\">{{source.title}}</span>' +\n            '</a>' +\n            '<a data-ng-if=\"source.image\" data-ng-href=\"{{source.image}}\">' +\n            '<img data-ng-src=\"{{source.thumb}}\" data-title=\"{{source.title}}\" data-description=\"{{source.description}}\" alt=\"{{source.alt}}\"' +\n            ' data-big=\"{{source.big_image}}\" />' +\n            '</a>' +\n            '</div>' +\n            '</div>',\n            link: function ($scope, $element, attrs) {\n\n                var theme_path = '';\n\n                if( angular.isDefined($scope.src) && angular.isUndefined($scope.theme)){\n                    theme_path = $scope.src;\n                }\n                else if( angular.isDefined($scope.src) && angular.isDefined($scope.theme) ){\n                    theme_path = $scope.src + '/' + $scope.theme + '/galleria.' + $scope.theme + '.min.js';\n                }\n                else if (rcGalleria.path.length > 0 && rcGalleria.theme.length === 0){\n                    theme_path = rcGalleria.path;\n                }\n                else if (rcGalleria.path.length > 0 && rcGalleria.theme.length > 0){\n                    theme_path = rcGalleria.path + '/' + rcGalleria.theme + '/galleria.' + rcGalleria.theme + '.min.js';\n                }\n\n                $scope.currentSource = {};\n\n                if (angular.isDefined($scope.images) && angular.isUndefined($scope.sources)) {\n                    $scope.sources = $scope.images;\n                }\n\n\n                if (theme_path.length > 0) {\n                    console.log(theme_path);\n                    Galleria.loadTheme( theme_path );\n                }\n\n\n                var obj = $element.find('.galleria');\n                var GalleriaApiReference;\n                var initialShowDock = $scope.initialShowDock === 'true';\n\n                $timeout(function () {\n\n                    $scope.currentIndex = angular.isDefined($scope.currentIndex) ? parseInt($scope.currentIndex, 10) : 0;\n                    $scope.currentSource = $scope.sources[$scope.currentIndex];\n\n                    if( $scope.thumbnails != null ) {\n                        switch( $scope.thumbnails ) {\n                            case 'true':\n                                $scope.thumbnails = true;\n                                break;\n                            case 'false':\n                                $scope.thumbnails = false;\n                                break;\n                        }\n                    }\n                    else {\n                        $scope.thumbnails = true;\n                    }\n\n                    Galleria.configure(angular.extend(rcGalleria.options,{\n                        show: $scope.currentIndex,\n                        keepSource: $scope.keepSource === 'true', // this prevents galleria from clearing the data source container\n                        transition: $scope.transition,\n                        initialTransition: $scope.transition,\n                        imageCrop: $scope.imageCrop,\n                        showImagenav: $scope.showImagenav === 'true',\n                        autoplay: angular.isDefined($scope.autoplay) ? parseInt($scope.autoplay, 10) : false,\n                        pauseOnInteraction: $scope.pauseOnInteraction === 'true',\n                        responsive: $scope.responsive === 'true',\n                        thumbnails: $scope.thumbnails,\n                        showInfo: $scope.showInfo === 'true',\n                        _toggleInfo: $scope.toggleInfo === 'true',\n                        showCounter: $scope.showCounter === 'true',\n                        clicknext: $scope.clickNext === 'true'\n                    }));\n\n                    Galleria.run(obj, {\n                        extend: function(){\n                            GalleriaApiReference = this;\n                        }\n                    });\n\n                    //Display console log all gallery instance\n                    $log.debug(Galleria.get());\n\n                    //Show dock thumbnail on load\n\n                    var firstImageLoaded = false;\n                    Galleria.ready(function(e) {\n                        Galleria.on(\"image\", function(e) {\n                            if (!firstImageLoaded && initialShowDock === true ) {\n                                this.$('thumbnails-tab').click();\n                                firstImageLoaded = true;\n                            }\n\n                            $scope.currentIndex = e.index;\n                            $scope.currentSource = $scope.sources[$scope.currentIndex];\n                            $scope.$apply();\n\n                            $scope.$emit('galleria.image-loaded', e);\n\n                            if (angular.isDefined($scope.currentSource.iframe) || angular.isDefined($scope.currentSource.video)) {\n                                $scope.$emit('galleria.iframe-load', e);\n\n                                $timeout(function () {\n                                    $(e.imageTarget ).mouseup();\n                                    $scope.$emit('galleria.iframe-loaded', e);\n                                }, 700);\n                            }\n                        });\n                    });\n\n                });\n\n                $scope.$on('$destroy', function() {\n                    if(GalleriaApiReference && GalleriaApiReference.destroy) {\n                        GalleriaApiReference.destroy();\n                    }\n                });\n            }\n        };\n    }]);\n\n}(angular, jQuery));\n"],"sourceRoot":"dist"}